/* tslint:disable */
/* eslint-disable */
/**
 * Use Miller BE
 * Describes the backend api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    BooleanResult,
    BooleanResultFromJSON,
    BooleanResultToJSON,
} from '../models';

/**
 * EmailClientApi - interface
 * 
 * @export
 * @interface EmailClientApiInterface
 */
export interface EmailClientApiInterface {
    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmailClientApiInterface
     */
    emailClientControllerVerifyRaw(): Promise<runtime.ApiResponse<BooleanResult>>;

    /**
     */
    emailClientControllerVerify(): Promise<BooleanResult>;

}

/**
 * 
 */
export class EmailClientApi extends runtime.BaseAPI implements EmailClientApiInterface {

    /**
     */
    async emailClientControllerVerifyRaw(): Promise<runtime.ApiResponse<BooleanResult>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === 'function' ? token("bearer", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/email-client/verify`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => BooleanResultFromJSON(jsonValue));
    }

    /**
     */
    async emailClientControllerVerify(): Promise<BooleanResult> {
        const response = await this.emailClientControllerVerifyRaw();
        return await response.value();
    }

}
