# Use postgres/example user/password credentials
# run with: docker-compose -f stack.yml up
version: "3.1"

services:
    db:
        container_name: ${COMPOSE_PROJECT_NAME}_postgres
        image: postgres:14.6-alpine
        restart: "no"
        ports:
            - ${APP_POSTGRES_PORT}:5432
        volumes:
            - ./infrastructure/database-initialisation:/docker-entrypoint-initdb.d
            - ./.docker-compose/volumes/postgres:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=${APP_POSTGRES_DATABASE}
            - POSTGRES_SCHEMA_NAME=${APP_POSTGRES_SCHEMA:-}
            - POSTGRES_USER=${APP_POSTGRES_USER}
            - POSTGRES_PASSWORD=${APP_POSTGRES_PASSWORD}
            - PGDATA=/var/lib/postgresql/data/pgdata
    redis:
        container_name: ${COMPOSE_PROJECT_NAME}_redis
        image: redis:7-alpine
        restart: "no"
        command: redis-server --save 20 1 --loglevel warning --requirepass redis-pass
        ports:
            - ${DOCKER_REDIS_PORT-6379}:6379
        volumes:
            - ./.docker-compose/volumes/redis:/data
        environment:
            - REDIS_REPLICATION_MODE=master
    # Jaeger
    jaeger-all-in-one:
        container_name: ${COMPOSE_PROJECT_NAME}_jaeger
        image: jaegertracing/all-in-one:latest
        restart: always
        ports:
            - "16686:16686"
            - "14268"
            - "14250"
    # Zipkin
    zipkin-all-in-one:
        container_name: ${COMPOSE_PROJECT_NAME}_zipkin
        image: openzipkin/zipkin:latest
        restart: always
        ports:
            - "9411:9411"
    # Collector

    otel-collector:
        container_name: ${COMPOSE_PROJECT_NAME}_otel_collector
        image: otel/opentelemetry-collector:latest
        restart: always
        command:
            ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS:-}"]
        volumes:
            - ./infrastructure/otel-collector-config.yaml:/etc/otel-collector-config.yaml
        ports:
            - "1888:1888" # pprof extension
            - "8888:8888" # Prometheus metrics exposed by the collector
            - "8889:8889" # Prometheus exporter metrics
            - "13133:13133" # health_check extension
            - "4317:4317" # OTLP gRPC receiver
            - "4318:4318" # OTLP HTTP receiver
            - "55679:55679" # zpages extension
        depends_on:
            - jaeger-all-in-one
            - zipkin-all-in-one
    prometheus:
        container_name: ${COMPOSE_PROJECT_NAME}_prometheus
        image: prom/prometheus:latest
        restart: always
        volumes:
            - ./infrastructure/prometheus.yaml:/etc/prometheus/prometheus.yml
        ports:
            - "9090:9090"
